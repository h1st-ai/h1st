"""
You can test your model code here by typing "nose2" in the terminal.
"""
import unittest
from $$MODEL_PACKAGE$$ import $$MODEL_CLASS$$

class $$MODEL_CLASS$$TestCase(unittest.TestCase):
    model = $$MODEL_CLASS$$()

    def test_load_data(self):
        self.data = self.model.load_data()
        self.assertIsInstance(self.data, dict)
        return self.data

    def test_explore(self):
        if not hasattr(self, 'data'):
            self.data = self.test_load_data()

        self.assertIsNone(self.model.explore(self.data), None)

    def test_prep(self):
        if not hasattr(self, 'data'):
            self.data = self.test_load_data()

        self.prepared_data = self.model.prep(self.data)
        self.assertIsInstance(self.prepared_data, dict)
        return self.prepared_data

    def test_train(self):
        if not hasattr(self, 'prepared_data'):
            self.prepared_data = self.test_prep()

        self.model.train(self.prepared_data)
        self.trained_model = self.model
        self.assertIsInstance(self.trained_model, $$MODEL_CLASS$$)
        return self.trained_model

    def test_evaluate(self):
        if not hasattr(self, 'trained_model') is None:
            self.trained_model = self.test_train()

        self.evaluation_metrics = self.trained_model.evaluate(self.prepared_data)
        self.assertIsInstance(self.evaluation_metrics, dict)

    def test_predict(self):
        if not hasattr(self, 'trained_model') is None:
            self.trained_model = self.test_train()

        self.predictions = self.trained_model.predict(self.prepared_data)
        self.assertIsInstance(self.predictions, dict)
