name: Publish library

on:
  push:
    branches: [ main ]

jobs:
  build-n-publish:
    name: Build and publish to TestPyPI and PyPI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Validate poetry configuration
        run: poetry check

      - name: Validate styling
        run: poetry run pylint **/*.py

      - name: Run tests
        run: poetry run pytest

      - name: Build source and wheels archives
        run: poetry build

      - name: Publish distribution to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Set version
        run: |
          echo "H1ST_VERSION=$(poetry version -s)" >> $GITHUB_ENV

      - name: Create tag using environment variable for version
        uses: julb/action-manage-tag@v1
        with:
          name: ${{ env.H1ST_VERSION }}
          state: present
          from: ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
